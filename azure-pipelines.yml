git::https://samcado.visualstudio.com/DEVOPS_Platform_as_a_Service/_git/s3//terraform-3.1.0-s3-bucket?ref=refs/tags/4.2.0



trigger: none

parameters:
- name: awsServiceConnection
  type: string
  default: "DevopsSandbox-889050139813-DevopsIACSvcVpc"

- name: awsRegion
  type: string
  default: "us-east-1"
  values:
    - "us-east-1"
    - "us-east-2"

- name: moduleRef
  type: string
  default: "refs/tags/4.2.0"     # tag/branch/commit for the shared s3 module

- name: tfvarsFile
  type: string
  default: "dev.tfvars"          # adjust if you use per-env tfvars

- name: tfPlanOnly
  type: boolean
  default: true                   # set to false to apply

pool:
  vmImage: "ubuntu-latest"

stages:
- stage: s3
  displayName: "Deploy S3 module (Method B, visualstudio.com)"
  jobs:
  - job: terraform
    displayName: "Terraform init/plan/apply"
    steps:
      - script: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y unzip jq
          TFV="1.12.2"
          curl -sSLo /tmp/terraform_${TFV}_linux_amd64.zip "https://releases.hashicorp.com/terraform/${TFV}/terraform_${TFV}_linux_amd64.zip"
          sudo unzip -o /tmp/terraform_${TFV}_linux_amd64.zip -d /usr/local/bin
          terraform -version
          jq --version
        displayName: "Install Terraform 1.12.2 + jq"

      - task: AWSShellScript@1
        displayName: "Terraform init/plan/apply (AWS creds)"
        inputs:
          awsCredentials: ${{ parameters.awsServiceConnection }}
          regionName: ${{ parameters.awsRegion }}
          scriptType: "inline"
          inlineScript: |
            set -euo pipefail
            export TF_IN_AUTOMATION=1

            # Add OAuth header for BOTH ADO hostnames
            git config --global http.https://samcado.visualstudio.com.extraheader "AUTHORIZATION: bearer ${SYSTEM_ACCESSTOKEN}"
            git config --global http.https://dev.azure.com.extraheader         "AUTHORIZATION: bearer ${SYSTEM_ACCESSTOKEN}"

            echo "Sanity: cross-project repo access (visualstudio.com)"
            git ls-remote "https://samcado.visualstudio.com/DEVOPS_Platform_as_a_Service/_git/s3" >/dev/null

            cd infra

            echo "terraform init (moduleRef=${MODULE_REF})"
            terraform init -input=false

            echo "terraform validate"
            terraform validate

            echo "terraform plan (-var-file=${TFVARS_FILE})"
            terraform plan -input=false \
              -var "module_ref=${MODULE_REF}" \
              -var-file="${TFVARS_FILE}"

            if [ "${TF_PLAN_ONLY}" = "false" ]; then
              echo "terraform apply"
              terraform apply -input=false -auto-approve \
                -var "module_ref=${MODULE_REF}" \
                -var-file="${TFVARS_FILE}"
            else
              echo "Plan-only mode active; skipping apply."
            fi
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)     # needed for cross-project module fetch
          MODULE_REF:        ${{ parameters.moduleRef }}
          TFVARS_FILE:       ${{ parameters.tfvarsFile }}
          TF_PLAN_ONLY:      ${{ parameters.tfPlanOnly }}
